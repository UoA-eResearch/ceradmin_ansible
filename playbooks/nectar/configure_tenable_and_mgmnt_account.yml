---
# Do prerequisite checks
- name: Prerequisite checks
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  tasks:

  - name: Get public IP address of OpenStack instance
    ceradmin.openstack.get_instance_details:
      instance_id: "{{ instance_id }}"
    register: instance

  - name: Register first public ipv4
    set_fact:
      public_ip: "{{ instance.details |
                     ceradmin.openstack.get_first_server_ipv4('130\\.216\\.\\d{1,3}\\.\\d{1,3}$') }}"

  - name: Fail if didn't get a public IP address
    fail:
      msg: "VM does not appear to have a public IP address"
    when: public_ip is not defined or public_ip == ""

  - name: Create temporary host group with single IP
    add_host:
      hostname: "{{ public_ip }}"
      groupname: tmp_group


# Set up and configure management account
- hosts: tmp_group,!localhost
  gather_facts: no
  become: true
  tasks:

  - name: Set up and configure management account
    include_role:
      name: ceradmin.nectar_external.management_account
      tasks_from: setup
    vars:
      ansible_user: "{{ default_user }}"


# Tag VM to indicate that management account has been set up
- name: Tag OpenStack VM 
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  tasks:

  - name: Set tag management_account_configured
    ceradmin.openstack.set_instance_tag:
      instance_id: "{{ instance_id }}"
      tag: management_account_configured


# Remove access for default account
- name: Remove access for the default account. We're going to use aklops from now on.
  hosts: tmp_group,!localhost
  gather_facts: no
  become: true
  tasks:

  - name: Remove public key from authorized_keys file of the default user
    ansible.posix.authorized_key:
      user: "{{ default_user }}"
      state: absent
      key: "{{ management_user_public_key }}"


# Install and register tenable agent
- hosts: tmp_group,!localhost
  become: true
  tasks:

  - name: Install and register tenable agent
    include_role:
      name: ceradmin.tenable.agent
      tasks_from: install
    vars:
      # Why we need to use hostvars here: https://stackoverflow.com/questions/33896847/how-do-i-set-register-a-variable-to-persist-between-plays-in-ansible
      tenable_agent_name: "pid={{ hostvars['localhost']['instance'].project_id }},uuid={{ instance_id }}"


# Tag VM to indicate that tenable has been set up
- name: Tag OpenStack VM
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  tasks:
  - name: Set tag tenable_agent_linked
    ceradmin.openstack.set_instance_tag:
      instance_id: "{{ instance_id }}"
      tag: tenable_agent_linked
